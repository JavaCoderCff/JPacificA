/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'java-library'
apply plugin: 'com.google.protobuf'

description = 'jpacifica grpc impl'

ext {
    jraft_version = '1.3.14'
    log4j_version = '2.22.1'
    grpc_version = '1.63.0'
}
dependencies {
    api project(':jpacifica-core')
    api project(':jpacifica-extension:jpacifica-rpc-grpc-impl')
    implementation "com.alipay.sofa:jraft-core:$jraft_version"
    implementation "com.alipay.sofa:rpc-grpc-impl:$jraft_version"
    implementation "com.google.protobuf:protobuf-java:$protobuf_version"
    implementation "com.google.guava:guava:$guava_version"


    implementation "io.grpc:grpc-core:$grpc_version"
    implementation "io.grpc:grpc-netty-shaded:$grpc_version"
    implementation "io.grpc:grpc-api:$grpc_version"
    implementation "io.grpc:grpc-services:$grpc_version"
    implementation "io.grpc:grpc-util:$grpc_version"
    implementation "io.grpc:grpc-protobuf:$grpc_version"

    implementation "org.apache.logging.log4j:log4j-core:$log4j_version"
    implementation "org.apache.logging.log4j:log4j-api:$log4j_version"
    implementation "org.apache.logging.log4j:log4j-slf4j2-impl:$log4j_version"

    testImplementation "org.junit.jupiter:junit-jupiter:$jupiter_version"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$jupiter_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$jupiter_version"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$jupiter_version"
}

sourceSets {
    main {
        proto {
            srcDir 'src/main/proto'
        }
        java {
            srcDir 'src/main/java'
            srcDir 'generated-sources/main/java'
        }
    }
}

test {
    useJUnitPlatform()
}

protobuf {
    // Download from repositories
    protoc {
        artifact = "com.google.protobuf:protoc:$protobuf_version"
    }
    generatedFilesBaseDir = 'generated-sources'
    generateProtoTasks {
        all().each { task ->

        }
        ofSourceSet('main')
    }
}

tasks.withType(Copy) {
    filesMatching("**/*.proto") {
        duplicatesStrategy = DuplicatesStrategy.INCLUDE
    }
}